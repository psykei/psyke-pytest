dataset;predictor;extractor_type;extractor_params;theory
house;houseRFR;ITER;"{'min_update': 0.05, 'threshold': 0.19}";"'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.5058) :- (in(AveBedrms, [0.0, 0.4322]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.0, 1.0]), in(Population, [0.0, 0.4569])). 'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.7344) :- (in(AveBedrms, [0.4322, 0.7501]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.0, 1.0]), in(Population, [0.0, 0.4569]))"
house;houseRFR;ITER;"{'min_update': 0.05, 'threshold': 0.19, 'n_points': 2}";"'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.5213) :- (in(AveBedrms, [0.0, 0.4459]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.0, 0.207]), in(Population, [0.0, 0.4569])). 'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.4643) :- (in(AveBedrms, [0.0, 0.4329]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.207, 1.0]), in(Population, [0.0, 0.4569])). 'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.7273) :- (in(AveBedrms, [0.4329, 0.7501]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.207, 1.0]), in(Population, [0.0, 0.4569])). 'MedHouseVal'(AveBedrms, AveOccup, AveRooms, HouseAge, Latitude, Longitude, MedInc, Population, 0.7821) :- (in(AveBedrms, [0.4459, 0.7501]), in(AveOccup, [0.0, 1.0]), in(AveRooms, [0.0, 1.0]), in(HouseAge, [0.0, 1.0]), in(Latitude, [0.0011, 1.0]), in(Longitude, [0.0, 1.0]), in(MedInc, [0.0, 0.207]), in(Population, [0.0, 0.4569]))"
